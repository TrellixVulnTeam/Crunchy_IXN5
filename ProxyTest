import Queue
import threading
import urllib2
import time

input_file = 'proxylist.txt'
threads = 10

queue = Queue.Queue()
output = []

class ThreadUrl(threading.Thread):
    """Threaded Url Grab"""
    def __init__(self, queue):
        threading.Thread.__init__(self)
        self.queue = queue

    def run(self):
        while True:
            #grabs host from queue
            proxy_info = self.queue.get()

            try:
                proxy_handler = urllib2.ProxyHandler({'http':proxy_info})
                opener = urllib2.build_opener(proxy_handler)
                opener.addheaders = [('User-agent','Mozilla/5.0')]
                urllib2.install_opener(opener)
                req = urllib2.Request("http://www.google.com")
                sock=urllib2.urlopen(req, timeout= 7)
                rs = sock.read(1000)
                if '<title>Google</title>' in rs:
                    output.append(('0',proxy_info))
                else:
                    raise "Not Google"
            except:
                output.append(('x',proxy_info))
            #signals to queue job is done
            self.queue.task_done()

start = time.time()
def main():

    #spawn a pool of threads, and pass them queue instance
    for i in range(5):
        t = ThreadUrl(queue)
        t.setDaemon(True)
        t.start()
    hosts = [host.strip() for host in open(input_file).readlines()]
    #populate queue with data
    for host in hosts:
        queue.put(host)

    #wait on the queue until everything has been processed
    queue.join()

main()
for proxy,host in output:
    print (proxy,host)

print ("Elapsed Time: %s" % (time.time() - start))

# import time
# from selenium import webdriver
# driver = webdriver.Firefox(executable_path=r'C:\Users\Jacob\Documents\geckodriver.exe')
# driver.get("http://google.com")
#
# search = driver.find_element_by_xpath("//*[@id=\"lst-ib\"]")
# search.send_keys("yerba mate\n")
#
# time.sleep(2)
#
# result = driver.find_element_by_xpath("/html/body/div[6]/div[3]/div[10]/div[1]/div[2]/div/div[2]/div[2]/div/div/div/div[1]/div/div/div/h3/a")
# result.click()
#
# time.sleep(3)
#
# result = driver.find_element_by_xpath("/html/body/div[2]/div[2]/div[2]/div[1]/a[5]")
# result.click()
